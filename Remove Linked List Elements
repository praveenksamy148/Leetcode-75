/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
        if(head == NULL){
            return NULL; 
        }
        while(head!=nullptr && head->val==val){
            head = head->next;
        }
        ListNode *previous = NULL, *current = head;
        while(current){
            if(current->val != val){
                previous = current; 
                current = current->next;
            } else{
                previous->next = current->next; 
                current = current->next; 
            }
        }
        return head; 
    }
};
