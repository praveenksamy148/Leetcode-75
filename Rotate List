/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    int length(ListNode* head){
        int len =0;
        while(head){
            head=head->next;
            len++;
        }
        return len;
    }
    ListNode* rotateRight(ListNode* head, int k) { 
        int len = length(head); 
        if(head == NULL){
            return NULL; 
        }
        //Get rid of unnecessary rotations
        k = k % len; 
        if(k == 0){
            return head;
        }
        //Last position of new rotated list 
        int pos = len - k - 1; 
        ListNode *newhead = nullptr, *newLast = head; 
        for(int i = 0; i < pos; i++){
            newLast = newLast->next; 
        }
        //Assign new starting head position and cut off end of list by assigning newLast->next to be null
        newhead = newLast->next; 
        newLast->next = nullptr; 

        ListNode *ptr = newhead; 
        while(ptr->next != NULL){
            ptr = ptr->next; 
        }
        ptr->next = head; 
        return newhead; 
        
    }
};
