/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int count = 0;
    int traverse(TreeNode *root){
        if(root == NULL){
            return 0; 
        }
        int lh = traverse(root->left); 
        int rh = traverse(root->right); 
        count = max(count, lh + rh); 
        return 1 + max(lh, rh); 
    }
    int diameterOfBinaryTree(TreeNode* root) {
        traverse(root); 
        return count; 
    }
};
