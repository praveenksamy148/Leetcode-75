/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isBalanced(TreeNode* root) {
        if(root == NULL){
            return true; 
        }
        // int rightSide = heightBinaryTree(root->right); 
        // int leftSide = heightBinaryTree(root->left); 
        return heightBinaryTree(root) != -1; 
    }

    int heightBinaryTree(TreeNode *root){
        if(root == NULL){
            return 0; 
        } 
        int lVal = heightBinaryTree(root->left); 
        if(lVal == -1){
            return -1; 
        }
        int rVal = heightBinaryTree(root->right); 
        if(rVal == -1){
            return -1; 
        }
        if(abs(lVal - rVal ) > 1){
            return -1; 
        }
        return 1 + max(lVal, rVal); 

    }
};
