class Solution {
public:
    bool isValidSudoku(vector<vector<char>>& board) {
        //Check to see if there is any non valid rows 
        for(int i = 0; i < 9; i++){
             vector<int>row(9,0); 
            for(int j = 0; j < 9; j++){
                if(board[i][j] != '.'){
                    int num = board[i][j] - '1'; 
                    row[num]++;
                    if(row[num] == 2){
                        return false; 
                    } 
                }
            }
        } 
        for(int i = 0; i < 9; i++){
            vector<int>column(9,0);
            for(int j = 0; j < 9; j++){
                if(board[j][i] != '.'){
                    int num = board[j][i] - '1'; 
                    column[num]++;
                    if(column[num] == 2){
                        return false; 
                    } 
                }
            }
        }

        for(int i = 0; i < 9; i+=3){
            for(int j = 0; j < 9; j += 3){
                vector<int>squareFreq(9,0);
                for(int x = i; x < i+ 3; x++){
                    for(int y = j; y < j + 3; y++){
                        if(board[x][y] != '.'){
                            int num = board[x][y] - '1'; 
                            squareFreq[num]++;
                            if(squareFreq[num] == 2){
                                return false; 
                            }
                        }
                    }
                } 
            }
        }
        return true; 

    }
};
