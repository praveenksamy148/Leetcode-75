//43 out of 44 test cases
class Solution {
public:
    bool isIsomorphic(string s, string t) {
       vector<int>s1, s2, count1, count2;  
       map<char,int>m1, m2;
       if(s.length() != t.length()){
           return false;
       }
       int repeat = 1; 
       for(int i = 1; i < s.length(); i++){
           if(s[i-1] == s[i]){
               repeat++;
           }else{
               s1.push_back(repeat); 
           }
           m1[s[i]]++;
       }
       repeat = 1; 
       for(int i = 1; i < s.length(); i++){
           if(t[i-1] == t[i]){
               repeat++;
           }else{
               s2.push_back(repeat); 
           }
           m2[t[i]]++;
       }
       auto it1 = m1.begin(); 
       auto it2 = m2.begin(); 
        while(it1 != m1.end()){
            count1.push_back(it1->second); 
            count2.push_back(it2->second); 
            it1++, it2++; 
        }
        sort(count1.begin(), count1.end()); 
        sort(count2.begin(), count2.end());
       
       return (s1 == s2 && count1 == count2); 
    
    }
};


