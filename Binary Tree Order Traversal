/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>>nodes; 
        queue<TreeNode*>orders; 
        if(!root){
            return nodes; 
        } else{
            orders.push(root); 
        }
        while(!orders.empty()){
            vector<int>values;
            int size = orders.size(); 
            for(int i = 0; i < size; i++){
                TreeNode *node = orders.front(); 
                orders.pop(); 
                if(node->left){
                    orders.push(node->left);
                }
                if(node->right){
                    orders.push(node->right);
                }
                values.push_back(node->val); 
            }
            nodes.push_back(values); 
        }
        return nodes; 
    }
};
